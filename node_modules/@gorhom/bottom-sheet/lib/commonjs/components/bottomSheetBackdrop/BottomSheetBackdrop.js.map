{"version":3,"sources":["BottomSheetBackdrop.tsx"],"names":["BottomSheetBackdropComponent","animatedIndex","opacity","DEFAULT_OPACITY","appearsOnIndex","DEFAULT_APPEARS_ON_INDEX","disappearsOnIndex","DEFAULT_DISAPPEARS_ON_INDEX","enableTouchThrough","DEFAULT_ENABLE_TOUCH_THROUGH","pressBehavior","DEFAULT_PRESS_BEHAVIOR","style","snapToIndex","close","containerRef","pointerEvents","handleOnPress","handleContainerTouchability","shouldDisableTouchability","current","setNativeProps","gestureHandler","onFinish","containerAnimatedStyle","value","Extrapolate","CLAMP","flex","containerStyle","styles","container","previous","BottomSheetBackdrop","displayName"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useMemo, useRef } from 'react';\nimport Animated, {\n  interpolate,\n  Extrapolate,\n  useAnimatedStyle,\n  useAnimatedReaction,\n  useAnimatedGestureHandler,\n  runOnJS,\n} from 'react-native-reanimated';\nimport {\n  TapGestureHandler,\n  TapGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport { useBottomSheet } from '../../hooks';\nimport {\n  DEFAULT_OPACITY,\n  DEFAULT_APPEARS_ON_INDEX,\n  DEFAULT_DISAPPEARS_ON_INDEX,\n  DEFAULT_ENABLE_TOUCH_THROUGH,\n  DEFAULT_PRESS_BEHAVIOR,\n} from './constants';\nimport { styles } from './styles';\nimport type { BottomSheetDefaultBackdropProps } from './types';\n\nconst BottomSheetBackdropComponent = ({\n  animatedIndex,\n  opacity = DEFAULT_OPACITY,\n  appearsOnIndex = DEFAULT_APPEARS_ON_INDEX,\n  disappearsOnIndex = DEFAULT_DISAPPEARS_ON_INDEX,\n  enableTouchThrough = DEFAULT_ENABLE_TOUCH_THROUGH,\n  pressBehavior = DEFAULT_PRESS_BEHAVIOR,\n  style,\n}: BottomSheetDefaultBackdropProps) => {\n  //#region hooks\n  const { snapToIndex, close } = useBottomSheet();\n  //#endregion\n\n  //#region variables\n  const containerRef = useRef<Animated.View>(null);\n  const pointerEvents = enableTouchThrough ? 'none' : 'auto';\n  //#endregion\n\n  //#region callbacks\n  const handleOnPress = useCallback(() => {\n    if (pressBehavior === 'close') {\n      close();\n    } else if (pressBehavior === 'collapse') {\n      snapToIndex(disappearsOnIndex as number);\n    } else if (typeof pressBehavior === 'number') {\n      snapToIndex(pressBehavior);\n    }\n  }, [snapToIndex, close, disappearsOnIndex, pressBehavior]);\n  const handleContainerTouchability = useCallback(\n    (shouldDisableTouchability: boolean) => {\n      if (!containerRef.current) {\n        return;\n      }\n      // @ts-ignore\n      containerRef.current.setNativeProps({\n        pointerEvents: shouldDisableTouchability ? 'none' : 'auto',\n      });\n    },\n    []\n  );\n  //#endregion\n\n  //#region tap gesture\n  const gestureHandler =\n    useAnimatedGestureHandler<TapGestureHandlerGestureEvent>(\n      {\n        onFinish: () => {\n          runOnJS(handleOnPress)();\n        },\n      },\n      [handleOnPress]\n    );\n  //#endregion\n\n  //#region styles\n  const containerAnimatedStyle = useAnimatedStyle(() => ({\n    opacity: interpolate(\n      animatedIndex.value,\n      [-1, disappearsOnIndex, appearsOnIndex],\n      [0, 0, opacity],\n      Extrapolate.CLAMP\n    ),\n    flex: 1,\n  }));\n  const containerStyle = useMemo(\n    () => [styles.container, style, containerAnimatedStyle],\n    [style, containerAnimatedStyle]\n  );\n  //#endregion\n\n  //#region effects\n  useAnimatedReaction(\n    () => animatedIndex.value <= disappearsOnIndex,\n    (shouldDisableTouchability, previous) => {\n      if (shouldDisableTouchability === previous) {\n        return;\n      }\n      runOnJS(handleContainerTouchability)(shouldDisableTouchability);\n    },\n    [disappearsOnIndex]\n  );\n  //#endregion\n\n  return pressBehavior !== 'none' ? (\n    <TapGestureHandler onGestureEvent={gestureHandler}>\n      <Animated.View\n        ref={containerRef}\n        style={containerStyle}\n        accessible={true}\n        accessibilityRole=\"button\"\n        accessibilityLabel=\"Bottom Sheet backdrop\"\n        accessibilityHint={`Tap to ${\n          typeof pressBehavior === 'string' ? pressBehavior : 'move'\n        } the Bottom Sheet`}\n      />\n    </TapGestureHandler>\n  ) : (\n    <Animated.View\n      ref={containerRef}\n      pointerEvents={pointerEvents}\n      style={containerStyle}\n    />\n  );\n};\n\nconst BottomSheetBackdrop = memo(BottomSheetBackdropComponent);\nBottomSheetBackdrop.displayName = 'BottomSheetBackdrop';\n\nexport default BottomSheetBackdrop;\n"]}