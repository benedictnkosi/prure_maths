import { useAnimatedGestureHandler } from 'react-native-reanimated';
export const useGestureHandler = (type, state, handleOnStart, handleOnActive, handleOnEnd) => {
  const gestureHandler = useAnimatedGestureHandler({
    onStart: (payload, context) => {
      state.value = payload.state;
      handleOnStart(type, payload, context);
    },
    onActive: (payload, context) => {
      state.value = payload.state;
      handleOnActive(type, payload, context);
    },
    onEnd: (payload, context) => {
      state.value = payload.state;
      handleOnEnd(type, payload, context);
    },
    onCancel: payload => {
      state.value = payload.state;
    },
    onFail: payload => {
      state.value = payload.state;
    },
    onFinish: payload => {
      state.value = payload.state;
    }
  }, [type, state, handleOnStart, handleOnActive, handleOnEnd]);
  return gestureHandler;
};
//# sourceMappingURL=useGestureHandler.js.map